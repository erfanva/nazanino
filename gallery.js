/**
 * Gallery Image Loader
 * 
 * This script demonstrates how to use the dynamically generated photos-list.json
 * file to load gallery images without hardcoding.
 */

// Function to load photos from the JSON file
async function loadGalleryImages() {
  try {
    // Fetch the JSON file generated by the GitHub Action
    const response = await fetch('photos-list.json');
    
    if (!response.ok) {
      throw new Error('Failed to load photos list');
    }
    
    const data = await response.json();
    const galleryContainer = document.getElementById('gallery-container');
    
    // Clear any existing content
    galleryContainer.innerHTML = '';
    
    // Check if we have photos
    if (data.photos && data.photos.length > 0) {
      // Loop through each photo and create gallery items
      data.photos.forEach(photo => {
        const photoElement = document.createElement('div');
        photoElement.className = 'gallery-item';
        
        const img = document.createElement('img');
        img.src = photo.path;
        img.alt = photo.file.split('.')[0].replace(/-|_/g, ' '); // Convert filename to alt text
        img.loading = 'lazy'; // Use lazy loading for better performance
        
        photoElement.appendChild(img);
        galleryContainer.appendChild(photoElement);
      });
    } else {
      // Display a message if no photos are found
      galleryContainer.innerHTML = '<p>No photos available in the gallery.</p>';
    }
  } catch (error) {
    console.error('Error loading gallery images:', error);
    document.getElementById('gallery-container').innerHTML = 
      '<p>Failed to load gallery images. Please try again later.</p>';
  }
}

// Call the function when the page loads
document.addEventListener('DOMContentLoaded', loadGalleryImages); 